---
export const prerender = true

import DefaultLayout from '../../layouts/Layout.astro'
import LayoutLPEbook from '../../layouts/LayoutLPEbook.astro'
import Category from '../../templates/Category.astro'
import Tag from '../../templates/Tag.astro'
import Post from '../../templates/Post.astro'
import Page from '../../templates/Page.astro'
import PageLPCategory from '../../templates/PageLPCategory.astro'
import PageEbookLP from '../../templates/PageEbookLP.astro'
import { getResourceByUri } from '../../api/getByUrl'
import { getAllUris } from '../../api/getAllUrls'
import { buildSeo } from '../../utils/seo'
import { getTypeByData } from '../../utils/type'
import Linktree from '../../templates/Linktree.astro'

// Return a list of all resources (pages, posts, tags, categories, etc), existing in the CMS in the current locale.
export async function getStaticPaths() {
  return await getAllUris('en')
}

// For the current URI, return the corresponding node from the CMS.
const uri: string = `/${Astro.params.uri}/`
const data = await getResourceByUri(uri, 'en')

function resolveContentTemplate(data: any) {
  const type = getTypeByData(data)

  if (!type) throw new Error(`No type found`)

  let template
  let layout = DefaultLayout
  switch (type) {
    case 'post':
      template = Post
      break
    case 'page':
      if (data.acf.template === 'category-landing-page') {
        template = PageLPCategory
        break
      }
      if (data.acf.template === 'ebook-landing-page') {
        template = PageEbookLP
        layout = LayoutLPEbook
        break
      }
      if (data.acf.template === 'linktree') {
        template = Linktree
        break
      }
      template = Page
      break
    case 'category':
      template = Category
      break
    case 'post_tag':
      template = Tag
      break
    default:
      template = Post
  }

  return { template, layout }
}

const { template: Template, layout: Layout } = resolveContentTemplate(data)
---

<Layout seo={buildSeo(data)}>
  <Template node={data} />
</Layout>
