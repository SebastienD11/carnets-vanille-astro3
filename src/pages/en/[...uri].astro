---
import Layout from '../../layouts/Layout.astro'
import Archive from '../../templates/Archive.astro'
import Single from '../../templates/Single.astro'
import { getNodeByURI } from '../../api/uri'
import { getAllUris } from '../../api/getUris'
import { buildAlternates } from '../../utils/seo'

// Return a list of all "fr" resources (pages, posts, tags, categories, etc), existing in the CMS.
export async function getStaticPaths() {
  return await getAllUris('en')
}

// For the current URI, return the corresponding node from the CMS.
const uri = `/${Astro.params.uri}/`
const data = await getNodeByURI(uri)
const node = data.nodeByUri

// Return the appropriate template for the current node.
function resolveContentTemplate(type: string) {
  let template
  switch (type) {
    case 'Post':
      template = Single
      break
    case 'Page':
      template = Single
      break
    case 'Category':
      template = Archive
      break
    case 'Tag':
      template = Archive
      break
    default:
      template = Single
  }

  return template
}

const Template = resolveContentTemplate(node.__typename)

const seo = {
  alternates: buildAlternates(node),
  canonical: node.seo.canonical,
  metaDesc: node.seo.metaDesc,
  metaRobotsNofollow: node.seo.metaRobotsNofollow,
  metaRobotsNoindex: node.seo.metaRobotsNoindex,
  opengraphAuthor: node.seo.opengraphAuthor,
  opengraphDescription: node.seo.opengraphDescription,
  opengraphModifiedTime: node.seo.opengraphModifiedTime,
  opengraphPublishedTime: node.seo.opengraphPublishedTime,
  opengraphPublisher: node.seo.opengraphPublisher,
  opengraphSiteName: node.seo.opengraphSiteName,
  opengraphTitle: node.seo.opengraphTitle,
  opengraphType: node.seo.opengraphType,
  opengraphUrl: node.seo.opengraphUrl,
  opengraphLocale: node.language.default_locale,
  opengraphImage: node.seo.opengraphImage,
  readingTime: node.seo.readingTime,
  title: node.seo.title || node.title
}
---

<Layout seo={seo}>
  <Template node={node} />
</Layout>
