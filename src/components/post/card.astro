---
import FormattedDate from '../../components/formatedDate.astro'
import { Image } from 'astro:assets'
import { getRelativeLocaleUrl } from 'astro:i18n'
import type { Post } from '../../api/post'
import { useTranslations } from '../../i18n/ui'
import { decode } from 'html-entities'

type Props = {
  post: Post
  isRelatedPost?: boolean
}

const lang = Astro.currentLocale as string
const t = useTranslations(lang)
const { post, isRelatedPost }: Props = Astro.props

const commentCount = post.yoast_head_json.schema['@graph'].find(
  (item) => item['@type'] === 'Article'
)?.commentCount
---

<article>
  <a
    class="group block overflow-hidden rounded-lg border bg-white no-underline transition hover:-translate-y-1 hover:no-underline hover:shadow-lg dark:border-stone-800 dark:bg-stone-800"
    href={getRelativeLocaleUrl(lang, `/${post.slug}`)}
    aria-label={post.title}
  >
    {
      post.featured_media_data[0] && (
        <Image
          src={post.featured_media_data[0]}
          alt={
            post.featured_media_data['alt_text']
              ? post.featured_media_data['alt_text']
              : post.title.rendered
          }
          width={post.featured_media_data[1]}
          widths={[330, 480, 730]}
          loading={isRelatedPost ? 'lazy' : 'eager'}
          sizes={`(max-width: 360px) 330px, (max-width: 480px) 480px, (max-width: 480px) 480px, (max-width: 767px) 730px, (max-width: 1279px) 330px, 480px`}
          height={post.featured_media_data[2]}
          class="my-0 h-auto w-full transition-shadow duration-300 group-hover:shadow-lg"
        />
      )
    }
    <div class="flex flex-col gap-2 p-6">
      <p class="flex items-center justify-between text-sm text-stone-700 dark:text-stone-300">
        <span>
          {t('card.date.modified')}
          <FormattedDate date={post.modified} />
        </span>
        {
          commentCount > 0 && (
            <span>
              <i class="icon-comment text-md" /> {commentCount}
            </span>
          )
        }
      </p>
      <h3 class="text-lg font-bold md:text-xl">{decode(post.title.rendered)}</h3>
      {
        post.excerpt.rendered && (
          <div class="prose prose-stone dark:prose-invert" set:html={post.excerpt.rendered} />
        )
      }
    </div>
  </a>
</article>
