---
import { useTranslations } from '../../i18n/ui'
import { getThemeOptions } from '../../api/options'

type mlGroup = {
  value: string
  label: string
}

const lang = Astro.currentLocale as string
const t = useTranslations(lang)
const glaceOptions = await getThemeOptions(lang)
---

<form>
  <div class="mb-6 grid gap-6 md:grid-cols-2">
    <div class="relative">
      <input
        type="text"
        id="firstName"
        class="peer block w-full appearance-none border-0 border-b-2 border-stone-900 bg-stone-900/5 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:outline-none focus:ring-0"
        placeholder=" "
      />
      <label
        for="firstName"
        class="absolute start-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-stone-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75"
      >
        {t('newsletter.form.firstName')}
      </label>
    </div>
    <div class="relative">
      <input
        type="email"
        id="emailAddress"
        class="peer block w-full appearance-none border-0 border-b-2 border-stone-900 bg-stone-900/5 px-2.5 pb-2.5 pt-5 text-sm text-gray-900 focus:outline-none focus:ring-0"
        placeholder=" "
      />
      <label
        for="emailAddress"
        class="absolute start-2.5 top-4 z-10 origin-[0] -translate-y-4 scale-75 transform text-sm text-stone-500 duration-300 peer-placeholder-shown:translate-y-0 peer-placeholder-shown:scale-100 peer-focus:-translate-y-4 peer-focus:scale-75"
      >
        {t('newsletter.form.email')}
      </label>
    </div>
    {
      glaceOptions.available_groups_for_newsletter.length > 0 && (
        <div class="flex flex-col gap-4">
          {glaceOptions.available_groups_for_newsletter.map((group: mlGroup) => (
            <>
              <div class="flex cursor-pointer items-center gap-1">
                <input
                  id={group.value}
                  type="checkbox"
                  value={group.value}
                  class="h-4 w-4 cursor-pointer rounded border-stone-500 bg-stone-900 text-stone-50 focus:ring-2"
                />
                <label
                  for={group.value}
                  class="ms-2 cursor-pointer text-sm font-medium text-stone-900"
                >
                  {group.label}
                </label>
              </div>
            </>
          ))}
        </div>
      )
    }
  </div>

  <button
    class="flex w-full items-center justify-center rounded bg-stone-900 px-4 py-4 text-center !font-bold text-white transition hover:-translate-y-1 hover:shadow-lg md:px-16"
  >
    {t('newsletter.form.submit')}
  </button>
</form>

<script is:inline>
  async function mailerlite() {
    const response = await fetch('/api/mailerlite', {
      method: 'GET'
    })
    const mailerlite = await response.json()
    console.log(mailerlite)
  }

  mailerlite()
</script>
