---
import type { Page } from '../api/page'
import { Image } from 'astro:assets'
import ipadMockup from '../images/ipad-mockup.png'
import { getCommentsForPost } from '../api/comment'
import { decode } from 'html-entities'
import Logo from '../components/header/Logo.astro'
import { getRelativeLocaleUrl } from 'astro:i18n'
import Footer from '../components/Footer/Footer.astro'
import { getThemeOptions } from '../api/options'

const lang = Astro.currentLocale as string

interface ACF extends Page {
  acf: {
    content_title: string
    content_formats: string
    content_version: string
    content_intro: string
    content_intro_bis: string
    content_the_content: string
    content_product_price: string
    content_image: {
      url: string
      alt: string
      width: number
      height: number
    }
    content_author: {
      author_description: string
      author_image: {
        url: string
        alt: string
        width: number
        height: number
      }
    }
    mailerlite_group: string
    content_faq: string
    product_schema_name: string
    product_schema_description: string
    product_schema_sku: string
    stripe_product_price_id: string
    stripe_product_price_id_test: string
  }
}

type Props = {
  node: ACF
}

const { node: page }: Props = Astro.props

const glaceOptions = await getThemeOptions(lang)

// Todo : Webhook for Payment processing
// Todo : Conversion Tracking
// Todo : Translations

// Content
const title = page.acf.content_title
const intro = page.acf.content_intro
const introBis = page.acf.content_intro_bis
const content = page.acf.content_the_content
const image = page.acf.content_image
const author = page.acf.content_author
const faq = page.acf.content_faq

// Ratings & Testimonials
const comments = await getCommentsForPost(page.id, lang)
// Note: The value below are proper to my Carnets Vanille case. We account for previous reviews received on Gumroad before moving awayt from the plateform.
let aggregateRating = 4.9
let reviewsCount = 16

comments?.map((comment) => {
  aggregateRating = (aggregateRating + comment.meta.product_rating) / 2
  reviewsCount += 1
})

aggregateRating = Math.round(aggregateRating * 100) / 100

// Pricing
const productPrice = page.acf.content_product_price
const productPriceSymbol = 'â‚¬'
const productPriceSymbolCode = 'EUR'

// Stripe
const testMode = import.meta.env.DEV ? true : glaceOptions.stripe_test_mode
const stripePriceId = testMode
  ? page.acf.stripe_product_price_id_test
  : page.acf.stripe_product_price_id

// Mailerlite
const mailerlite_group = page.acf.mailerlite_group

// This section is to overide the Google Markup coming from Yoast. As in Wordpress, this ebook is created as a page, Yoast schema markup doesn't know it's a product. By passing this object to <script type="application/ld+json" set:html={JSON.stringify(schema)} />  in our DOM, it will override the one coming from Yoast above in the DOM.
const schema = {
  '@context': 'https://schema.org/',
  '@type': 'Product',
  name: page.acf.product_schema_name,
  image: image.url,
  description: page.acf.product_schema_description,
  sku: page.acf.product_schema_sku,
  brand: {
    '@type': 'Brand',
    name: 'Carnets Vanille'
  },
  aggregateRating: {
    '@type': 'AggregateRating',
    ratingValue: aggregateRating,
    reviewCount: reviewsCount
  },
  offers: {
    '@type': 'Offer',
    url: page.link,
    priceCurrency: productPriceSymbolCode,
    price: productPrice,
    availability: 'https://schema.org/InStock'
  }
}
---

<script type="application/ld+json" set:html={JSON.stringify(schema)} />

<div class="flex flex-col border-b border-stone-200 lg:flex-row">
  {/* Left column */}
  <div
    class="w-full px-4 pt-12 md:pt-6 lg:w-1/2 lg:border-r lg:border-stone-200 lg:bg-gradient-to-l lg:from-stone-100 lg:to-stone-100/10 lg:pt-0 dark:lg:border-stone-600 dark:lg:from-stone-800 dark:lg:to-stone-900"
  >
    <div
      class="mx-auto flex max-w-[460px] shrink-0 flex-col justify-start gap-8 py-8 lg:sticky lg:top-0 lg:h-screen lg:justify-center xl:max-w-[550px]"
    >
      <div class="flex flex-col gap-48">
        <div class="flex flex-col items-center gap-8 lg:items-start xl:gap-8">
          <div
            class="flex items-center justify-center gap-1 rounded-full border border-vanille bg-vanille/60 px-4 py-1 text-sm font-medium backdrop-blur-xl dark:bg-vanille"
          >
            <span class="mr-2 dark:text-stone-900">Digital Product</span>
            <span
              class="rounded bg-stone-600 px-1 py-[1px] text-xs font-bold uppercase text-vanille"
              >PDF</span
            >
            <span
              class="rounded bg-stone-600 px-1 py-[1px] text-xs font-bold uppercase text-vanille"
              >Epub</span
            >
          </div>
          {/* Title */}
          {
            title && (
              <div class="flex flex-col gap-2 text-center lg:text-left">
                <h1 class="text-2xl font-extrabold dark:text-vanille 2xl:text-4xl">{title}</h1>
                <span class="block text-sm">
                  <em>
                    Written by <strong>Sarah Lagache</strong>, updated in 2023
                  </em>
                </span>
              </div>
            )
          }
          {/* Metas */}
          {
            aggregateRating && (
              <>
                <div class="flex flex-col items-center justify-center gap-2 md:flex-row">
                  {aggregateRating && reviewsCount && (
                    <div class="flex flex-row items-center justify-center gap-1 font-bold">
                      <svg
                        class="me-1 h-4 w-4 text-vanille"
                        aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg"
                        fill="currentColor"
                        viewBox="0 0 22 20"
                      >
                        <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                      </svg>
                      <span>{aggregateRating}</span>
                      <span class="mx-1.5 h-1 w-1 rounded-full bg-stone-500 dark:bg-stone-50" />
                      <span>{reviewsCount} reviews</span>
                    </div>
                  )}
                </div>
              </>
            )
          }
          {/* Intro */}
          {intro && <div class="prose prose-stone mx-auto dark:prose-invert" set:html={intro} />}
          {/* Mobile Ipad */}
          {
            image && (
              <div class="relative z-0 mx-auto max-w-full md:max-w-[450px] lg:hidden">
                <Image
                  src={image.url}
                  alt={image.alt || title}
                  width={image.width}
                  height={image.height}
                  densities={[1.5, 2]}
                  loading="lazy"
                  class="absolute z-10 h-auto w-full scale-[0.92] rounded-3xl"
                />
                <Image
                  src={ipadMockup}
                  alt="Ebook on Ipad"
                  width={ipadMockup.width}
                  densities={[1.5, 2]}
                  loading="lazy"
                  class="relative z-10 max-w-full"
                />
              </div>
            )
          }
          {/* Checkout CTA */}
          <button
            type="button"
            create-checkout
            class="hidden w-full cursor-pointer select-none items-center
            justify-center gap-2 rounded-lg border-b-[1px] border-vanille/80 bg-vanille py-4 text-lg
            font-extrabold uppercase text-stone-900 transition-all
            duration-150 [box-shadow:0_5px_0_0_#c1a724,0_8px_0_0_#4e430841]
            hover:bg-vanille/80 active:translate-y-2
            active:[box-shadow:0_0px_0_0_#c1a724,0_0px_0_0_#4e430841]
            lg:flex"
          >
            <i class="icon-icon-add-to-card"></i>
            <span>
              Buy for {productPrice}
              {productPriceSymbol}
            </span>
          </button>

          {/* Mobile Checkout CTA */}
          <button
            type="button"
            create-checkout
            class="fixed bottom-4 z-10 mx-auto flex w-full max-w-[94%] cursor-pointer select-none items-center
            justify-center gap-2 rounded-lg border-b-[1px] border-vanille/80 bg-vanille py-4 text-lg
            font-extrabold uppercase text-stone-900 transition-all
            duration-150 [box-shadow:0_5px_0_0_#c1a724,0_8px_0_0_#4e430841]
            hover:bg-vanille/80 active:translate-y-2
            active:[box-shadow:0_0px_0_0_#c1a724,0_0px_0_0_#4e430841]
            lg:hidden"
          >
            <i class="icon-icon-add-to-card"></i>
            <span>
              Buy for {productPrice}
              {productPriceSymbol}
            </span>
          </button>

          {/* Intro Bis */}
          {
            introBis && (
              <div class="prose prose-stone mx-auto dark:prose-invert" set:html={introBis} />
            )
          }
        </div>
        <a
          href={getRelativeLocaleUrl(lang, '/')}
          class="hidden text-sm text-stone-700 hover:underline dark:text-stone-400 lg:block"
        >
          &#8592; Back to the blog
        </a>
      </div>
    </div>
  </div>
  {/* End Left column */}
  {/* Right column */}
  <div class="w-full px-4 pb-12 lg:mx-auto lg:w-1/2 lg:max-w-prose lg:pt-32">
    <div class="mx-auto flex max-w-[450px] flex-col justify-start gap-8 lg:max-w-none lg:gap-12">
      {/* Separator */}
      <i class="icon-ermine mx-auto mt-8 text-xl lg:hidden"> </i>

      {/* Desktop Ipad */}
      {
        image && (
          <div class="relative mx-auto hidden max-w-[450px] lg:mt-12 lg:block">
            <Image
              src={image.url}
              alt={image.alt || title}
              width={image.width}
              height={image.height}
              densities={[1.5, 2]}
              loading="lazy"
              class="absolute z-10 h-auto w-full scale-[0.92] rounded-3xl"
            />
            <Image
              src={ipadMockup}
              alt="Ebook on Ipad"
              width={ipadMockup.width}
              densities={[1.5, 2]}
              loading="lazy"
              class="relative z-10 max-w-full"
            />
          </div>
        )
      }

      {/* The Content */}
      {
        content && (
          <>
            <h3 class="mark mx-auto inline-block text-xl font-bold">The Content</h3>
            <div class="prose prose-stone dark:prose-invert" set:html={content} />
          </>
        )
      }

      {/* Separator */}
      <i class="icon-ermine mx-auto text-xl"> </i>

      {/* Testimonials */}
      {
        comments.length > 0 && (
          <>
            <div class="flex flex-col items-center gap-3">
              <h3 class="mark mx-auto inline-block text-xl font-bold">Testimonials</h3>
              <div class="flex flex-row items-center justify-center gap-1 font-bold">
                <svg
                  class="me-1 h-4 w-4 text-vanille"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="currentColor"
                  viewBox="0 0 22 20"
                >
                  <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                </svg>
                <span>{aggregateRating}</span>
                <span class="mx-1.5 h-1 w-1 rounded-full bg-stone-500 dark:bg-stone-50" />
                <span>{reviewsCount} reviews</span>
              </div>
            </div>

            <div class="grid gap-8 xl:grid-cols-2">
              {comments.map((comment) => (
                <div class="flex items-center justify-center rounded-lg bg-stone-100 p-6 shadow dark:bg-stone-800">
                  <div class="flex flex-col items-center gap-3">
                    {comment.meta.product_rating && (
                      <div class="flex flex-row items-center justify-center">
                        {new Array(comment.meta.product_rating).fill(0).map(() => {
                          return (
                            <svg
                              class="me-1 h-4 w-4 text-vanille"
                              aria-hidden="true"
                              xmlns="http://www.w3.org/2000/svg"
                              fill="currentColor"
                              viewBox="0 0 22 20"
                            >
                              <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                            </svg>
                          )
                        })}
                      </div>
                    )}
                    <blockquote
                      class="text-center font-medium italic"
                      set:html={comment.content.rendered}
                    />
                    <figcaption class="text-center font-bold dark:text-vanille">
                      {decode(comment.author_name)}
                    </figcaption>
                  </div>
                </div>
              ))}
            </div>
          </>
        )
      }

      {/* Separator */}
      <i class="icon-ermine mx-auto text-xl"> </i>

      {/* Author */}
      {
        author.author_description && author.author_image && (
          <div class="flex flex-col items-center justify-center">
            <Image
              src={author.author_image.url}
              alt={author.author_image.alt || 'Sarah Lagache'}
              width={author.author_image.width / 2}
              height={author.author_image.height / 2}
              densities={[1.5, 2]}
              loading="lazy"
            />
            <div class="prose prose-stone dark:prose-invert" set:html={author.author_description} />
          </div>
        )
      }

      {/* Separator */}
      <i class="icon-ermine mx-auto text-xl"> </i>

      {/* The FAQ */}
      {
        faq && (
          <>
            <h3 class="mark mx-auto inline-block text-xl font-bold">FAQ</h3>
            <div class="prose prose-stone dark:prose-invert" set:html={faq} />
          </>
        )
      }
    </div>
    <Footer />
  </div>
</div>

<script define:vars={{ stripePriceId, mailerlite_group }}>
  document.querySelectorAll('[create-checkout]').forEach((el) => {
    el.addEventListener('click', () => {
      createCheckout()
    })
  })

  async function createCheckout() {
    const response = await fetch('/api/stripe/checkout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        stripePriceId,
        page: window.location,
        mlGroup: mailerlite_group
      })
    })

    const { url } = await response.json()

    window.location.href = url
  }
</script>
