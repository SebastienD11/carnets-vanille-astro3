---
import type { Post } from '../api/post'
import type { Tag as TagType } from '../api/tag'
import type { Category as CategoryType } from '../api/category'
import BadgeTag from '../components/tag/badgeTag.astro'
import BadgeCategory from '../components/category/badgeCategory.astro'

const post: Post = Astro.props.node
---

<h1>{post.title.rendered}</h1>
<!-- 
  Display tags links if post has terms
  ['wp:term'][1] refers to tag 
-->
<div class="flex gap-4">
  {post._embedded['wp:term'][1]?.map((tag: TagType) => <BadgeTag tag={tag} />)}
</div>

<!-- 
  Display categories links if post has terms
  ['wp:term'][0] refers to tag 
-->
<div class="flex gap-4">
  {
    post._embedded['wp:term'][0]?.map((category: CategoryType) => (
      <BadgeCategory category={category} />
    ))
  }
</div>

<!-- Only show date if post is a Post -->
{
  post.type === 'post' ? (
    <p class="post-details">
      Posted on <time datetime={post.date}>{new Date(post.date).toLocaleDateString()}</time>
    </p>
  ) : null
}
<img
  class="featured-image"
  src={post._embedded['wp:featuredmedia'][0]?.source_url}
  srcset={post._embedded['wp:featuredmedia'][0]?.source_url}
  alt={post._embedded['wp:featuredmedia'][0]?.alt_text}
  width={post._embedded['wp:featuredmedia'][0]?.mediaDetails?.width}
  height={post._embedded['wp:featuredmedia'][0]?.mediaDetails?.height}
/>

<article set:html={post.content.rendered} />
