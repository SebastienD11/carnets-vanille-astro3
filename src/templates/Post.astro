---
import '@wordpress/block-library/build-style/common.css'
import '@wordpress/block-library/build-style/style.css'
import '@wordpress/block-library/build-style/theme.css'
import { Image } from 'astro:assets'
import type { Post } from '../api/post'
import type { Tag as TagType } from '../api/tag'
import BadgeTag from '../components/tag/badgeTag.astro'
import CommentList from '../components/post/commentList.astro'
import { parseHtml } from '../utils/parser'
import { useTranslations } from '../i18n/ui'
import { getCommentsForPost } from '../api/comment'
import FormattedDate from '../components/formatedDate.astro'
import RelatedPost from '../components/post/relatedPost.astro'
import SectionTitle from '../components/ui/sectionTitle.astro'

const lang = Astro.currentLocale as string
const t = useTranslations(lang)
const post: Post = Astro.props.node
const comments = await getCommentsForPost(post.id, lang)
---

<div class="flex flex-col gap-8">
  <div
    class="relative mx-auto flex aspect-video w-full max-w-screen-md flex-col items-center justify-center gap-4 rounded-lg bg-cover bg-center bg-no-repeat p-12"
    style={`background-image:url('${post.featured_media_data[0]}')`}
  >
    <!-- {
    post.featured_media_data[0] && (
      <Image
        src={post.featured_media_data[0]}
        alt={
          post.featured_media_data['alt_text']
            ? post.featured_media_data['alt_text']
            : post.title.rendered
        }
        width={post.featured_media_data[1]}
        widths={[330, 450, 620, 730]}
        sizes={`(max-width: 360px) 330, (max-width: 480px) 450px, (max-width: 1024px) 730px, 620px`}
        loading={'eager'}
        height={post.featured_media_data[2]}
        class="absolute mx-auto mb-12 h-full w-auto rounded lg:max-w-prose"
      />
    )
  } -->
    <h1
      class="inline-block text-center text-xl font-extrabold leading-tight text-white drop-shadow-lg md:text-2xl lg:text-3xl xl:text-4xl"
    >
      {post.title.rendered}
    </h1>

    <p class="text-center text-sm italic text-white">
      <FormattedDate date={post.date} />
    </p>
  </div>

  <div class="flex flex-wrap items-center justify-center gap-4">
    {post._embedded['wp:term'][1]?.map((tag: TagType) => <BadgeTag tag={tag} />)}
  </div>

  <article
    class="prose prose-stone mx-auto dark:prose-invert"
    set:html={parseHtml(post.content.rendered)}
  />

  {
    post.acf.related_posts.length > 0 && (
      <div class="mx-auto max-w-screen-md">
        <SectionTitle as="h3" className="mb-8 text-center">
          {t('post.relatedPost.title')}
        </SectionTitle>
        <div class="grid grid-cols-1 gap-8 lg:grid-cols-3">
          {post.acf.related_posts.map((postId) => (
            <RelatedPost postId={postId} />
          ))}
        </div>
      </div>
    )
  }

  <CommentList comments={comments} />
</div>
