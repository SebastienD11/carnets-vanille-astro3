---
import '@wordpress/block-library/build-style/common.css'
import '@wordpress/block-library/build-style/style.css'
import '@wordpress/block-library/build-style/theme.css'
import { Image } from 'astro:assets'
import { decode } from 'html-entities'
import { getCommentsForPost } from '../api/comment'
import { parseHtml } from '../utils/parser'
import { useTranslations } from '../i18n/ui'
import AuthorCard from '../components/post/authorCard.astro'
import BannerEbookSample from '../components/ebook/bannerEbookSample.astro'
import CommentForm from '../components/post/commentForm.astro'
import CommentList from '../components/post/commentList.astro'
import FormattedDate from '../components/formatedDate.astro'
import RelatedPost from '../components/post/relatedPost.astro'
import SectionTitle from '../components/ui/sectionTitle.astro'
import ShareButtons from '../components/post/shareButtons.astro'
import TagList from '../components/post/tagList.astro'
import type { Post } from '../api/post'
import BannerEbookBuy from '../components/ebook/bannerEbookBuy.astro'

const lang = Astro.currentLocale as string
const t = useTranslations(lang)
const post: Post = Astro.props.node
const comments = await getCommentsForPost(post.id, lang)
---

<div class="flex flex-col gap-12">
  <div
    class="after:bg-zink-900/50 relative mx-auto w-full max-w-screen-md after:absolute after:inset-0 after:block after:h-full after:rounded-lg"
  >
    {
      post.featured_media_data[0] && (
        <Image
          src={post.featured_media_data[0]}
          alt={
            post.featured_media_data['alt_text']
              ? post.featured_media_data['alt_text']
              : post.title.rendered
          }
          width={post.featured_media_data[1]}
          widths={[330, 450, 768]}
          sizes={`(max-width: 360px) 330, (max-width: 480px) 450px, (max-width: 1024px) 768px, 768px`}
          loading={'eager'}
          height={post.featured_media_data[2]}
          class="mx-auto h-auto w-full rounded-lg"
        />
      )
    }
    <div
      class="absolute left-1/2 top-1/2 z-10 flex -translate-x-1/2 -translate-y-1/2 flex-col items-center justify-center gap-4"
    >
      <h1
        class="inline-block text-balance text-center text-xl font-extrabold leading-tight text-white drop-shadow-lg md:text-2xl lg:text-3xl xl:text-4xl"
      >
        {decode(post.title.rendered)}
      </h1>

      <p class="text-center text-sm italic text-white">
        <FormattedDate date={post.date} />
      </p>
    </div>
  </div>

  <TagList post={post} />

  <article
    class="prose-zink prose mx-auto dark:prose-invert"
    set:html={parseHtml(post.content.rendered)}
  />

  <div class="mx-auto flex w-full max-w-screen-md flex-col gap-24">
    <div>
      <SectionTitle as="h3" title={t('post.footer.title')} subtitle={t('post.footer.subtitle')} />
      <div class="flex flex-col gap-4">
        <ShareButtons post={post} />
        <p class="text-zink-500 dark:text-zink-300 text-center">
          {
            post.modified !== post.date && (
              <>
                {t('post.footer.date_modified')}
                <FormattedDate date={post.modified} />
              </>
            )
          }
        </p>
        <TagList post={post} />
      </div>
    </div>

    <AuthorCard />

    {
      post.acf.related_posts.length > 0 && (
        <div>
          <SectionTitle as="h3" title={t('post.relatedPost.title')} />
          <div class="grid grid-cols-1 gap-8 lg:grid-cols-3">
            {post.acf.related_posts.map((postId) => (
              <RelatedPost postId={postId} />
            ))}
          </div>
        </div>
      )
    }

    {post.acf.display_banner && <BannerEbookBuy />}

    {
      post.comment_status === 'open' && (
        <div id="comments" class="flex flex-col gap-24">
          <div>
            <SectionTitle
              as="h3"
              title={`${t('post.comments.form.title')}`}
              subtitle={t('post.comments.form.subtitle')}
            />
            <CommentForm postId={post.id} newsletterGroupId={post.acf.mailerlite} />
          </div>
          <CommentList comments={comments} />
        </div>
      )
    }
  </div>
</div>

{/* Shortcode Original Components */}
<BannerEbookSample />
